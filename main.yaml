heat_template_version: 2016-10-14

parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
  image_name:
    type: string
    label: Image ID
    description: Image to be used for compute instance
  instance_type:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
  instance_name:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
  public_net:
    type: string
    description: >
      ID or name of public network for which floating IP addresses will be allocated
  private_net_name:
    type: string
    description: Name of private network to be created
  private_net_cidr:
    type: string
    description: Private network address (CIDR notation)
  private_net_gateway:
    type: string
    description: Private network gateway address
  private_net_pool_start:
    type: string
    description: Start of private network IP address allocation pool
  private_net_pool_end:
    type: string
    description: End of private network IP address allocation pool

resources:
 
  my_lan_network:
    type: OS::Neutron::Net
    properties:
      name: {get_param: private_net_name }
  my_lan_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: my_lan_network }
      cidr: {get_param: private_net_cidr }
      gateway_ip: {get_param: private_net_gateway }
      allocation_pools: 
        - start: { get_param: private_net_pool_start}
          end: { get_param: private_net_pool_end }
  my_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }
  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: my_router }
      subnet_id: { get_resource: my_lan_subnet }

  my_instance:
    type: OS::Nova::Server
    properties:
      name: { get_param: instance_name }
      key_name: { get_param: key_name }
      image: { get_param: image_name }
      flavor: { get_param: instance_type }