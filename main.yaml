heat_template_version: 2013-05-23

parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
  image_name:
    type: string
    label: Image ID
    description: Image to be used for compute instance
  instance_type:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
  instance_name:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
  public_net:
    type: string
    description: >
      ID or name of public network for which floating IP addresses will be allocated
  private_net_name:
    type: string
    description: Name of private network to be created
  private_net_cidr:
    type: string
    description: Private network address (CIDR notation)
  private_net_gateway:
    type: string
    description: Private network gateway address
  private_net_pool_start:
    type: string
    description: Start of private network IP address allocation pool
  private_net_pool_end:
    type: string
    description: End of private network IP address allocation pool
  safe-1:
    type: string

resources:
  my_lan_network:
    type: OS::Neutron::Net
    properties:
      name: {get_param: private_net_name }
  my_lan_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: my_lan_network }
      cidr: {get_param: private_net_cidr }
      gateway_ip: {get_param: private_net_gateway }
      allocation_pools: 
        - start: { get_param: private_net_pool_start}
          end: { get_param: private_net_pool_end }
  my_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }
  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: my_router }
      subnet_id: { get_resource: my_lan_subnet }
  port_1:
    type: OS::Neutron::Port
    properties:
      network_id: {get_resource: my_lan_network}
      fixed_ips:
        - subnet_id: {get_resource: my_lan_subnet}
      security_groups: [{ get_resource: security_group }]  
  floating_ip_1:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: port_1 }
  
  
  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Test group to demonstrate Neutron security group functionality with Heat.
      name: test-security-group
      rules: [
        {remote_ip_prefix: {get_param: safe-1 },
        protocol: tcp,
        port_range_min: 22,
        port_range_max: 22},
        {remote_ip_prefix: {get_param: safe-1 },
        protocol: icmp}]
  
  my_instance:
    type: OS::Nova::Server
    properties:
      name: { get_param: instance_name }
      key_name: { get_param: key_name }
      image: { get_param: image_name }
      flavor: { get_param: instance_type }
      networks:
        - port: {get_resource: port_1}

outputs:
  server1_private_ip:
    description: IP address of server1 in private network
    value: { get_attr: [ my_instance, first_address ] }
  server1_public_ip:
    description: Floating IP address of server1 in public network
    value: { get_attr: [ floating_ip_1, floating_ip_address ] }